<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
	<dict>
		<!-- Identity -->
		<key>CFBundleDevelopmentRegion</key>
		<string>$(DEVELOPMENT_LANGUAGE)</string>
		<key>CFBundleDisplayName</key>
		<string>Fiinny</string>
		<key>CFBundleExecutable</key>
		<string>$(EXECUTABLE_NAME)</string>
		<key>CFBundleIdentifier</key>
		<string>$(PRODUCT_BUNDLE_IDENTIFIER)</string>
		<key>CFBundleInfoDictionaryVersion</key>
		<string>6.0</string>
		<key>CFBundleName</key>
		<string>Fiinny</string>
		<key>CFBundlePackageType</key>
		<string>APPL</string>
		<key>CFBundleShortVersionString</key>
		<string>$(FLUTTER_BUILD_NAME)</string>
		<key>CFBundleSignature</key>
		<string>????</string>
		<key>CFBundleVersion</key>
		<string>$(FLUTTER_BUILD_NUMBER)</string>
		<!-- Flutter / iOS app basics -->
		<key>LSRequiresIPhoneOS</key>
		<true/>
		<key>UILaunchStoryboardName</key>
		<string>LaunchScreen</string>
		<!-- If you don't use a Main storyboard (Flutter usually doesn't), keep this absent -->
		<!-- Orientation -->
		<key>UISupportedInterfaceOrientations</key>
		<array>
			<string>UIInterfaceOrientationPortrait</string>
			<string>UIInterfaceOrientationLandscapeLeft</string>
			<string>UIInterfaceOrientationLandscapeRight</string>
		</array>
		<key>UISupportedInterfaceOrientations~ipad</key>
		<array>
			<string>UIInterfaceOrientationPortrait</string>
			<string>UIInterfaceOrientationPortraitUpsideDown</string>
			<string>UIInterfaceOrientationLandscapeLeft</string>
			<string>UIInterfaceOrientationLandscapeRight</string>
		</array>
		<!-- Performance / input -->
		<key>CADisableMinimumFrameDurationOnPhone</key>
		<true/>
		<key>UIApplicationSupportsIndirectInputEvents</key>
		<true/>
		<!-- Status bar (Flutter usually controls this) -->
		<key>UIStatusBarHidden</key>
		<true/>
		<key>UIViewControllerBasedStatusBarAppearance</key>
		<false/>
		<!-- App Store export compliance -->
		<key>ITSAppUsesNonExemptEncryption</key>
		<false/>
		<!-- Privacy permissions used by your plugins -->
		<key>NSCameraUsageDescription</key>
		<string>This app uses the camera to let you capture photos and videos.</string>
		<key>NSMicrophoneUsageDescription</key>
		<string>This app uses the microphone when recording videos.</string>
		<key>NSPhotoLibraryUsageDescription</key>
		<string>This app needs access to your photo library to select and save media.</string>
		<key>NSPhotoLibraryAddUsageDescription</key>
		<string>This app saves images and videos to your photo library.</string>
		<key>NSContactsUsageDescription</key>
		<string>This app reads contacts to help you select and share with people you know.</string>
		<!-- Tracking prompt only shows if you call ATTrackingManager.requestTrackingAuthorization -->
		<key>NSUserTrackingUsageDescription</key>
		<string>We use this identifier to improve app experience and analytics.</string>
		<!-- App Transport Security -->
		<!-- Dev-friendly: allow all HTTP (tighten later to just your API domain) -->
		<key>NSAppTransportSecurity</key>
		<dict>
			<key>NSAllowsArbitraryLoads</key>
			<true/>
		</dict>
		<!--
    // Safer production example (replace api.yourdomain.com)
    <key>NSAppTransportSecurity</key>
    <dict>
      <key>NSExceptionDomains</key>
      <dict>
        <key>api.yourdomain.com</key>
        <dict>
          <key>NSIncludesSubdomains</key><true/>
          <key>NSTemporaryExceptionAllowsInsecureHTTPLoads</key><true/>
          <key>NSTemporaryExceptionMinimumTLSVersion</key><string>TLSv1.2</string>
        </dict>
      </dict>
    </dict>
    -->
		<!-- Google Sign-In / Firebase OAuth: replace placeholder with REVERSED_CLIENT_ID from ios/Runner/GoogleService-Info.plist -->
		<key>CFBundleURLTypes</key>
		<array>
			<dict>
				<key>CFBundleTypeRole</key>
				<string>Editor</string>
				<key>CFBundleURLSchemes</key>
				<array>
					<string>REVERSED_CLIENT_ID_FROM_GOOGLESERVICE_INFO</string>
				</array>
			</dict>
		</array>
		<!-- If you open third-party apps via URL schemes (only add what you use) -->
		<!--
    <key>LSApplicationQueriesSchemes</key>
    <array>
      <string>whatsapp</string>
      <string>instagram</string>
      <string>twitter</string>
    </array>
    -->
	</dict>
</plist>
