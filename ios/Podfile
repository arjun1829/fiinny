# ios/Podfile

platform :ios, '13.0'

ENV['COCOAPODS_DISABLE_STATS'] = 'true'

# Map build configurations to CocoaPods
project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

# Locate FLUTTER_ROOT from Generated.xcconfig (written by `flutter pub get`)
def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure `flutter pub get` ran first."
  end
  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}"
end

# âœ… Correct way to load Flutter's pod helper
require File.expand_path('packages/flutter_tools/bin/podhelper', flutter_root)

flutter_ios_podfile_setup

target 'Runner' do
  # Static frameworks avoid a bunch of Swift linking issues with many Flutter plugins
  use_frameworks! :linkage => :static
  use_modular_headers!

  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
end

post_install do |installer|
  installer.pods_project.build_configurations.each do |config|
    # Ensure iOS 13 even if some pods try to drop it lower
    config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '13.0'
  end

  flutter_additional_ios_build_settings(targets: installer.pods_project.targets)
end
