# ios/Podfile

platform :ios, '16.0'
$ios_deployment_target = '16.0'

ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug'   => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcconfig = File.expand_path('../Flutter/Generated.xcconfig', __FILE__)
  raise "#{generated_xcconfig} missing - run flutter pub get" unless File.exist?(generated_xcconfig)
  File.foreach(generated_xcconfig) do |line|
    return line.split('=').last.strip if line.start_with?('FLUTTER_ROOT')
  end
  raise 'FLUTTER_ROOT not found in Generated.xcconfig'
end

require File.expand_path('packages/flutter_tools/bin/podhelper', flutter_root)

target 'Runner' do
  # Static frameworks reduce transitive-linker issues on CI
  use_frameworks! :linkage => :static
  use_modular_headers!

  flutter_install_all_ios_pods(File.dirname(File.realpath(__FILE__)))
end

post_install do |installer|
  # Enforce iOS 16 and DISABLE module interfaces for ALL Pods
  installer.pods_project.targets.each do |t|
    t.build_configurations.each do |config|
      bs = config.build_settings
      bs['IPHONEOS_DEPLOYMENT_TARGET'] = $ios_deployment_target
      # Important: NO module interfaces, avoids bridging-header crash on Xcode 15/16
      bs['BUILD_LIBRARY_FOR_DISTRIBUTION'] = 'NO'
      # Do not exclude arm64 for simulator; Apple silicon needs it.
    end
    flutter_additional_ios_build_settings(t)
  end

  # Keep any generated projects consistent as well
  installer.generated_projects.each do |project|
    project.build_configurations.each do |config|
      bs = config.build_settings
      bs['IPHONEOS_DEPLOYMENT_TARGET'] = $ios_deployment_target
      bs['BUILD_LIBRARY_FOR_DISTRIBUTION'] = 'NO'
    end
  end

  # Ensure the Runner app target ALSO has BLD for distribution OFF (fixes the compiler error)
  begin
    require 'xcodeproj'
    app_project_path = File.expand_path('../Runner.xcodeproj', __FILE__)
    app_project = Xcodeproj::Project.open(app_project_path)
    app_project.targets.each do |t|
      next unless t.name == 'Runner'
      t.build_configurations.each do |config|
        bs = config.build_settings
        bs['IPHONEOS_DEPLOYMENT_TARGET'] = $ios_deployment_target
        bs['BUILD_LIBRARY_FOR_DISTRIBUTION'] = 'NO'
      end
    end
    app_project.save
  rescue LoadError
    # xcodeproj gem is available in CocoaPods runtime, but ignore if not
  end

  # Disable code signing for Pods (Runner is signed by Xcode/CI)
  installer.pods_project.targets.each do |t|
    t.build_configurations.each do |config|
      bs = config.build_settings
      bs['CODE_SIGNING_ALLOWED']  = 'NO'
      bs['CODE_SIGNING_REQUIRED'] = 'NO'
      bs['CODE_SIGNING_STYLE']    = 'Automatic'
      bs.delete('PROVISIONING_PROFILE_SPECIFIER')
      bs.delete('PROVISIONING_PROFILE')
      bs.delete('DEVELOPMENT_TEAM')
      bs.delete('CODE_SIGN_IDENTITY')
      bs.delete('EXPANDED_CODE_SIGN_IDENTITY')
    end
  end
end
