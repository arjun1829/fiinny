name: iOS IPA â†’ TestFlight
on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  ios:
    runs-on: macos-14
    timeout-minutes: 60
    env:
      BUILD_NUMBER: ${{ github.run_number }}
      WORKSPACE: ios/Runner.xcworkspace
      SCHEME: Runner
      EXPORT_PLIST: ios/ExportOptions.plist
    steps:
      - uses: actions/checkout@v4

      - name: Set up Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '16'

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: Flutter deps
        run: flutter pub get

      - name: Install signing assets
        shell: bash
        run: |
          set -euxo pipefail
          echo "${{ secrets.IOS_CERT_P12_BASE64 }}" | base64 --decode > signing.p12
          security create-keychain -p "" build.keychain
          security import signing.p12 -k ~/Library/Keychains/build.keychain -P "${{ secrets.IOS_CERT_PASSWORD }}" -T /usr/bin/codesign
          security list-keychains -s ~/Library/Keychains/build.keychain
          security default-keychain -s ~/Library/Keychains/build.keychain
          security unlock-keychain -p "" ~/Library/Keychains/build.keychain
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          echo "${{ secrets.IOS_PROVISIONING_PROFILE_BASE64 }}" | base64 --decode > ~/Library/MobileDevice/Provisioning\ Profiles/AppStore.mobileprovision

      - name: Bump build number
        shell: bash
        run: |
          set -euxo pipefail
          PLIST=ios/Runner/Info.plist
          /usr/libexec/PlistBuddy -c "Set :CFBundleVersion ${BUILD_NUMBER}" "$PLIST" || /usr/libexec/PlistBuddy -c "Add :CFBundleVersion string ${BUILD_NUMBER}" "$PLIST"

      - name: Build IPA (app-store)
        env:
          CI: true
        run: |
          set -euxo pipefail
          flutter --version
          flutter build ipa --release --build-number ${BUILD_NUMBER} --export-options-plist ${EXPORT_PLIST}
          ls -l build/ios/ipa

      - name: Prepare App Store Connect key
        shell: bash
        run: |
          set -euxo pipefail
          mkdir -p ~/.appstoreconnect/private_keys
          echo "${{ secrets.ASC_PRIVATE_KEY_BASE64 }}" | base64 --decode > ~/.appstoreconnect/private_keys/AuthKey_${{ secrets.ASC_KEY_ID }}.p8
          ls -l ~/.appstoreconnect/private_keys

      - name: Upload to TestFlight (App Store Connect)
        shell: bash
        env:
          ASC_KEY_ID: ${{ secrets.ASC_KEY_ID }}
          ASC_ISSUER_ID: ${{ secrets.ASC_ISSUER_ID }}
        run: |
          set -euxo pipefail
          IPA="build/ios/ipa/Runner.ipa"
          echo "Uploading $IPA with key $ASC_KEY_ID issuer $ASC_ISSUER_ID"
          xcrun altool --upload-app -f "$IPA" --type ios --apiKey "$ASC_KEY_ID" --apiIssuer "$ASC_ISSUER_ID"
          echo "Upload complete"

      - name: (Optional) Upload dSYMs to Crashlytics
        if: always()
        shell: bash
        run: |
          set +e
          GSP=ios/Runner/GoogleService-Info.plist
          UPLOADER=ios/Pods/FirebaseCrashlytics/upload-symbols
          if [[ -f "$UPLOADER" && -f "$GSP" ]]; then
            find build/ios/archive/Runner.xcarchive/dSYMs -name "*.dSYM" -maxdepth 1 | while read -r DSYM; do
              "$UPLOADER" -gsp "$GSP" -p ios "$DSYM" || echo "warn: Crashlytics upload failed for $DSYM"
            done
          else
            echo "skip: Crashlytics uploader or GSP not found"
          fi

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ios-out
          path: |
            build/ios/ipa/*.ipa
            build/ios/archive/Runner.xcarchive/dSYMs
